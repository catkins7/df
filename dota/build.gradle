apply plugin: 'android'

tasks.whenTaskAdded { task ->
    if (task.name == "validateReleaseSigning")
        task.dependsOn keystoreInfoRelease

    if (task.name == "validateBetaSigning")
        task.dependsOn keystoreInfoBeta
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 117
        versionName "0.5.1"
    }

    signingConfigs {
        beta {
            storeFile file("release.keystore")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }

        release {
            storeFile file("release.keystore")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
            runProguard false
            signingConfig signingConfigs.beta
        }

        release {
            runProguard false
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile "com.squareup.picasso:picasso:2.2.+"
    compile "com.squareup.retrofit:retrofit:1.6.+"
    compile "com.squareup.okhttp:okhttp:1.6.+"
    compile "com.squareup.okhttp:okhttp-urlconnection:1.6.+"

    compile 'com.android.support:support-v13:19.1.+'
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

task keystoreInfoRelease << {
    def console = System.console()
    if (console == null)
        throw new IllegalStateException('no console available, use --no-daemon flag')

    def storeFile = console.readLine('Keystore: ')
    def storePassword = console.readPassword('Keystore password: ')
    def keyAlias = console.readLine('Key alias: ')
    def keyPassword = console.readPassword('Key password: ')

    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = new String(storePassword)
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = new String(keyPassword)
}

task keystoreInfoBeta << {
    def console = System.console()
    if (console == null)
        throw new IllegalStateException('no console available, use --no-daemon flag')

    def storeFile = console.readLine('Keystore: ')
    def storePassword = console.readPassword('Keystore password: ')
    def keyAlias = console.readLine('Key alias: ')
    def keyPassword = console.readPassword('Key password: ')

    android.signingConfigs.beta.storeFile = file(storeFile)
    android.signingConfigs.beta.storePassword = new String(storePassword)
    android.signingConfigs.beta.keyAlias = keyAlias
    android.signingConfigs.beta.keyPassword = new String(keyPassword)
}
